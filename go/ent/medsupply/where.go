// Code generated by ent, DO NOT EDIT.

package medsupply

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/obutora/med_supply_info/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldID, id))
}

// DoseForm applies equality check predicate on the "dose_form" field. It's identical to DoseFormEQ.
func DoseForm(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldDoseForm, v))
}

// GenericName applies equality check predicate on the "generic_name" field. It's identical to GenericNameEQ.
func GenericName(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldGenericName, v))
}

// Unit applies equality check predicate on the "unit" field. It's identical to UnitEQ.
func Unit(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldUnit, v))
}

// YjCode applies equality check predicate on the "yj_code" field. It's identical to YjCodeEQ.
func YjCode(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldYjCode, v))
}

// YjBase applies equality check predicate on the "yj_base" field. It's identical to YjBaseEQ.
func YjBase(v int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldYjBase, v))
}

// Maker applies equality check predicate on the "maker" field. It's identical to MakerEQ.
func Maker(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldMaker, v))
}

// BrandName applies equality check predicate on the "brand_name" field. It's identical to BrandNameEQ.
func BrandName(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldBrandName, v))
}

// SalesCategory applies equality check predicate on the "sales_category" field. It's identical to SalesCategoryEQ.
func SalesCategory(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldSalesCategory, v))
}

// ShipmentStatus applies equality check predicate on the "shipment_status" field. It's identical to ShipmentStatusEQ.
func ShipmentStatus(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldShipmentStatus, v))
}

// SupplyStatus applies equality check predicate on the "supply_status" field. It's identical to SupplyStatusEQ.
func SupplyStatus(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldSupplyStatus, v))
}

// ExpectLiftingStatus applies equality check predicate on the "expect_lifting_status" field. It's identical to ExpectLiftingStatusEQ.
func ExpectLiftingStatus(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldExpectLiftingStatus, v))
}

// ExpectLiftingDescription applies equality check predicate on the "expect_lifting_description" field. It's identical to ExpectLiftingDescriptionEQ.
func ExpectLiftingDescription(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldExpectLiftingDescription, v))
}

// Reason applies equality check predicate on the "reason" field. It's identical to ReasonEQ.
func Reason(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldReason, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldUpdatedAt, v))
}

// DoseFormEQ applies the EQ predicate on the "dose_form" field.
func DoseFormEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldDoseForm, v))
}

// DoseFormNEQ applies the NEQ predicate on the "dose_form" field.
func DoseFormNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldDoseForm, v))
}

// DoseFormIn applies the In predicate on the "dose_form" field.
func DoseFormIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldDoseForm, vs...))
}

// DoseFormNotIn applies the NotIn predicate on the "dose_form" field.
func DoseFormNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldDoseForm, vs...))
}

// DoseFormGT applies the GT predicate on the "dose_form" field.
func DoseFormGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldDoseForm, v))
}

// DoseFormGTE applies the GTE predicate on the "dose_form" field.
func DoseFormGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldDoseForm, v))
}

// DoseFormLT applies the LT predicate on the "dose_form" field.
func DoseFormLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldDoseForm, v))
}

// DoseFormLTE applies the LTE predicate on the "dose_form" field.
func DoseFormLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldDoseForm, v))
}

// DoseFormContains applies the Contains predicate on the "dose_form" field.
func DoseFormContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldDoseForm, v))
}

// DoseFormHasPrefix applies the HasPrefix predicate on the "dose_form" field.
func DoseFormHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldDoseForm, v))
}

// DoseFormHasSuffix applies the HasSuffix predicate on the "dose_form" field.
func DoseFormHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldDoseForm, v))
}

// DoseFormEqualFold applies the EqualFold predicate on the "dose_form" field.
func DoseFormEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldDoseForm, v))
}

// DoseFormContainsFold applies the ContainsFold predicate on the "dose_form" field.
func DoseFormContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldDoseForm, v))
}

// GenericNameEQ applies the EQ predicate on the "generic_name" field.
func GenericNameEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldGenericName, v))
}

// GenericNameNEQ applies the NEQ predicate on the "generic_name" field.
func GenericNameNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldGenericName, v))
}

// GenericNameIn applies the In predicate on the "generic_name" field.
func GenericNameIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldGenericName, vs...))
}

// GenericNameNotIn applies the NotIn predicate on the "generic_name" field.
func GenericNameNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldGenericName, vs...))
}

// GenericNameGT applies the GT predicate on the "generic_name" field.
func GenericNameGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldGenericName, v))
}

// GenericNameGTE applies the GTE predicate on the "generic_name" field.
func GenericNameGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldGenericName, v))
}

// GenericNameLT applies the LT predicate on the "generic_name" field.
func GenericNameLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldGenericName, v))
}

// GenericNameLTE applies the LTE predicate on the "generic_name" field.
func GenericNameLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldGenericName, v))
}

// GenericNameContains applies the Contains predicate on the "generic_name" field.
func GenericNameContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldGenericName, v))
}

// GenericNameHasPrefix applies the HasPrefix predicate on the "generic_name" field.
func GenericNameHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldGenericName, v))
}

// GenericNameHasSuffix applies the HasSuffix predicate on the "generic_name" field.
func GenericNameHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldGenericName, v))
}

// GenericNameEqualFold applies the EqualFold predicate on the "generic_name" field.
func GenericNameEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldGenericName, v))
}

// GenericNameContainsFold applies the ContainsFold predicate on the "generic_name" field.
func GenericNameContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldGenericName, v))
}

// UnitEQ applies the EQ predicate on the "unit" field.
func UnitEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldUnit, v))
}

// UnitNEQ applies the NEQ predicate on the "unit" field.
func UnitNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldUnit, v))
}

// UnitIn applies the In predicate on the "unit" field.
func UnitIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldUnit, vs...))
}

// UnitNotIn applies the NotIn predicate on the "unit" field.
func UnitNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldUnit, vs...))
}

// UnitGT applies the GT predicate on the "unit" field.
func UnitGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldUnit, v))
}

// UnitGTE applies the GTE predicate on the "unit" field.
func UnitGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldUnit, v))
}

// UnitLT applies the LT predicate on the "unit" field.
func UnitLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldUnit, v))
}

// UnitLTE applies the LTE predicate on the "unit" field.
func UnitLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldUnit, v))
}

// UnitContains applies the Contains predicate on the "unit" field.
func UnitContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldUnit, v))
}

// UnitHasPrefix applies the HasPrefix predicate on the "unit" field.
func UnitHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldUnit, v))
}

// UnitHasSuffix applies the HasSuffix predicate on the "unit" field.
func UnitHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldUnit, v))
}

// UnitEqualFold applies the EqualFold predicate on the "unit" field.
func UnitEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldUnit, v))
}

// UnitContainsFold applies the ContainsFold predicate on the "unit" field.
func UnitContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldUnit, v))
}

// YjCodeEQ applies the EQ predicate on the "yj_code" field.
func YjCodeEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldYjCode, v))
}

// YjCodeNEQ applies the NEQ predicate on the "yj_code" field.
func YjCodeNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldYjCode, v))
}

// YjCodeIn applies the In predicate on the "yj_code" field.
func YjCodeIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldYjCode, vs...))
}

// YjCodeNotIn applies the NotIn predicate on the "yj_code" field.
func YjCodeNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldYjCode, vs...))
}

// YjCodeGT applies the GT predicate on the "yj_code" field.
func YjCodeGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldYjCode, v))
}

// YjCodeGTE applies the GTE predicate on the "yj_code" field.
func YjCodeGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldYjCode, v))
}

// YjCodeLT applies the LT predicate on the "yj_code" field.
func YjCodeLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldYjCode, v))
}

// YjCodeLTE applies the LTE predicate on the "yj_code" field.
func YjCodeLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldYjCode, v))
}

// YjCodeContains applies the Contains predicate on the "yj_code" field.
func YjCodeContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldYjCode, v))
}

// YjCodeHasPrefix applies the HasPrefix predicate on the "yj_code" field.
func YjCodeHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldYjCode, v))
}

// YjCodeHasSuffix applies the HasSuffix predicate on the "yj_code" field.
func YjCodeHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldYjCode, v))
}

// YjCodeEqualFold applies the EqualFold predicate on the "yj_code" field.
func YjCodeEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldYjCode, v))
}

// YjCodeContainsFold applies the ContainsFold predicate on the "yj_code" field.
func YjCodeContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldYjCode, v))
}

// YjBaseEQ applies the EQ predicate on the "yj_base" field.
func YjBaseEQ(v int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldYjBase, v))
}

// YjBaseNEQ applies the NEQ predicate on the "yj_base" field.
func YjBaseNEQ(v int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldYjBase, v))
}

// YjBaseIn applies the In predicate on the "yj_base" field.
func YjBaseIn(vs ...int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldYjBase, vs...))
}

// YjBaseNotIn applies the NotIn predicate on the "yj_base" field.
func YjBaseNotIn(vs ...int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldYjBase, vs...))
}

// YjBaseGT applies the GT predicate on the "yj_base" field.
func YjBaseGT(v int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldYjBase, v))
}

// YjBaseGTE applies the GTE predicate on the "yj_base" field.
func YjBaseGTE(v int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldYjBase, v))
}

// YjBaseLT applies the LT predicate on the "yj_base" field.
func YjBaseLT(v int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldYjBase, v))
}

// YjBaseLTE applies the LTE predicate on the "yj_base" field.
func YjBaseLTE(v int) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldYjBase, v))
}

// MakerEQ applies the EQ predicate on the "maker" field.
func MakerEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldMaker, v))
}

// MakerNEQ applies the NEQ predicate on the "maker" field.
func MakerNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldMaker, v))
}

// MakerIn applies the In predicate on the "maker" field.
func MakerIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldMaker, vs...))
}

// MakerNotIn applies the NotIn predicate on the "maker" field.
func MakerNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldMaker, vs...))
}

// MakerGT applies the GT predicate on the "maker" field.
func MakerGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldMaker, v))
}

// MakerGTE applies the GTE predicate on the "maker" field.
func MakerGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldMaker, v))
}

// MakerLT applies the LT predicate on the "maker" field.
func MakerLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldMaker, v))
}

// MakerLTE applies the LTE predicate on the "maker" field.
func MakerLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldMaker, v))
}

// MakerContains applies the Contains predicate on the "maker" field.
func MakerContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldMaker, v))
}

// MakerHasPrefix applies the HasPrefix predicate on the "maker" field.
func MakerHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldMaker, v))
}

// MakerHasSuffix applies the HasSuffix predicate on the "maker" field.
func MakerHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldMaker, v))
}

// MakerEqualFold applies the EqualFold predicate on the "maker" field.
func MakerEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldMaker, v))
}

// MakerContainsFold applies the ContainsFold predicate on the "maker" field.
func MakerContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldMaker, v))
}

// BrandNameEQ applies the EQ predicate on the "brand_name" field.
func BrandNameEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldBrandName, v))
}

// BrandNameNEQ applies the NEQ predicate on the "brand_name" field.
func BrandNameNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldBrandName, v))
}

// BrandNameIn applies the In predicate on the "brand_name" field.
func BrandNameIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldBrandName, vs...))
}

// BrandNameNotIn applies the NotIn predicate on the "brand_name" field.
func BrandNameNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldBrandName, vs...))
}

// BrandNameGT applies the GT predicate on the "brand_name" field.
func BrandNameGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldBrandName, v))
}

// BrandNameGTE applies the GTE predicate on the "brand_name" field.
func BrandNameGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldBrandName, v))
}

// BrandNameLT applies the LT predicate on the "brand_name" field.
func BrandNameLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldBrandName, v))
}

// BrandNameLTE applies the LTE predicate on the "brand_name" field.
func BrandNameLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldBrandName, v))
}

// BrandNameContains applies the Contains predicate on the "brand_name" field.
func BrandNameContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldBrandName, v))
}

// BrandNameHasPrefix applies the HasPrefix predicate on the "brand_name" field.
func BrandNameHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldBrandName, v))
}

// BrandNameHasSuffix applies the HasSuffix predicate on the "brand_name" field.
func BrandNameHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldBrandName, v))
}

// BrandNameEqualFold applies the EqualFold predicate on the "brand_name" field.
func BrandNameEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldBrandName, v))
}

// BrandNameContainsFold applies the ContainsFold predicate on the "brand_name" field.
func BrandNameContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldBrandName, v))
}

// SalesCategoryEQ applies the EQ predicate on the "sales_category" field.
func SalesCategoryEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldSalesCategory, v))
}

// SalesCategoryNEQ applies the NEQ predicate on the "sales_category" field.
func SalesCategoryNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldSalesCategory, v))
}

// SalesCategoryIn applies the In predicate on the "sales_category" field.
func SalesCategoryIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldSalesCategory, vs...))
}

// SalesCategoryNotIn applies the NotIn predicate on the "sales_category" field.
func SalesCategoryNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldSalesCategory, vs...))
}

// SalesCategoryGT applies the GT predicate on the "sales_category" field.
func SalesCategoryGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldSalesCategory, v))
}

// SalesCategoryGTE applies the GTE predicate on the "sales_category" field.
func SalesCategoryGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldSalesCategory, v))
}

// SalesCategoryLT applies the LT predicate on the "sales_category" field.
func SalesCategoryLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldSalesCategory, v))
}

// SalesCategoryLTE applies the LTE predicate on the "sales_category" field.
func SalesCategoryLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldSalesCategory, v))
}

// SalesCategoryContains applies the Contains predicate on the "sales_category" field.
func SalesCategoryContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldSalesCategory, v))
}

// SalesCategoryHasPrefix applies the HasPrefix predicate on the "sales_category" field.
func SalesCategoryHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldSalesCategory, v))
}

// SalesCategoryHasSuffix applies the HasSuffix predicate on the "sales_category" field.
func SalesCategoryHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldSalesCategory, v))
}

// SalesCategoryEqualFold applies the EqualFold predicate on the "sales_category" field.
func SalesCategoryEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldSalesCategory, v))
}

// SalesCategoryContainsFold applies the ContainsFold predicate on the "sales_category" field.
func SalesCategoryContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldSalesCategory, v))
}

// ShipmentStatusEQ applies the EQ predicate on the "shipment_status" field.
func ShipmentStatusEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldShipmentStatus, v))
}

// ShipmentStatusNEQ applies the NEQ predicate on the "shipment_status" field.
func ShipmentStatusNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldShipmentStatus, v))
}

// ShipmentStatusIn applies the In predicate on the "shipment_status" field.
func ShipmentStatusIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldShipmentStatus, vs...))
}

// ShipmentStatusNotIn applies the NotIn predicate on the "shipment_status" field.
func ShipmentStatusNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldShipmentStatus, vs...))
}

// ShipmentStatusGT applies the GT predicate on the "shipment_status" field.
func ShipmentStatusGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldShipmentStatus, v))
}

// ShipmentStatusGTE applies the GTE predicate on the "shipment_status" field.
func ShipmentStatusGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldShipmentStatus, v))
}

// ShipmentStatusLT applies the LT predicate on the "shipment_status" field.
func ShipmentStatusLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldShipmentStatus, v))
}

// ShipmentStatusLTE applies the LTE predicate on the "shipment_status" field.
func ShipmentStatusLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldShipmentStatus, v))
}

// ShipmentStatusContains applies the Contains predicate on the "shipment_status" field.
func ShipmentStatusContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldShipmentStatus, v))
}

// ShipmentStatusHasPrefix applies the HasPrefix predicate on the "shipment_status" field.
func ShipmentStatusHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldShipmentStatus, v))
}

// ShipmentStatusHasSuffix applies the HasSuffix predicate on the "shipment_status" field.
func ShipmentStatusHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldShipmentStatus, v))
}

// ShipmentStatusEqualFold applies the EqualFold predicate on the "shipment_status" field.
func ShipmentStatusEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldShipmentStatus, v))
}

// ShipmentStatusContainsFold applies the ContainsFold predicate on the "shipment_status" field.
func ShipmentStatusContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldShipmentStatus, v))
}

// SupplyStatusEQ applies the EQ predicate on the "supply_status" field.
func SupplyStatusEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldSupplyStatus, v))
}

// SupplyStatusNEQ applies the NEQ predicate on the "supply_status" field.
func SupplyStatusNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldSupplyStatus, v))
}

// SupplyStatusIn applies the In predicate on the "supply_status" field.
func SupplyStatusIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldSupplyStatus, vs...))
}

// SupplyStatusNotIn applies the NotIn predicate on the "supply_status" field.
func SupplyStatusNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldSupplyStatus, vs...))
}

// SupplyStatusGT applies the GT predicate on the "supply_status" field.
func SupplyStatusGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldSupplyStatus, v))
}

// SupplyStatusGTE applies the GTE predicate on the "supply_status" field.
func SupplyStatusGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldSupplyStatus, v))
}

// SupplyStatusLT applies the LT predicate on the "supply_status" field.
func SupplyStatusLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldSupplyStatus, v))
}

// SupplyStatusLTE applies the LTE predicate on the "supply_status" field.
func SupplyStatusLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldSupplyStatus, v))
}

// SupplyStatusContains applies the Contains predicate on the "supply_status" field.
func SupplyStatusContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldSupplyStatus, v))
}

// SupplyStatusHasPrefix applies the HasPrefix predicate on the "supply_status" field.
func SupplyStatusHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldSupplyStatus, v))
}

// SupplyStatusHasSuffix applies the HasSuffix predicate on the "supply_status" field.
func SupplyStatusHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldSupplyStatus, v))
}

// SupplyStatusEqualFold applies the EqualFold predicate on the "supply_status" field.
func SupplyStatusEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldSupplyStatus, v))
}

// SupplyStatusContainsFold applies the ContainsFold predicate on the "supply_status" field.
func SupplyStatusContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldSupplyStatus, v))
}

// ExpectLiftingStatusEQ applies the EQ predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldExpectLiftingStatus, v))
}

// ExpectLiftingStatusNEQ applies the NEQ predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldExpectLiftingStatus, v))
}

// ExpectLiftingStatusIn applies the In predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldExpectLiftingStatus, vs...))
}

// ExpectLiftingStatusNotIn applies the NotIn predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldExpectLiftingStatus, vs...))
}

// ExpectLiftingStatusGT applies the GT predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldExpectLiftingStatus, v))
}

// ExpectLiftingStatusGTE applies the GTE predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldExpectLiftingStatus, v))
}

// ExpectLiftingStatusLT applies the LT predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldExpectLiftingStatus, v))
}

// ExpectLiftingStatusLTE applies the LTE predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldExpectLiftingStatus, v))
}

// ExpectLiftingStatusContains applies the Contains predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldExpectLiftingStatus, v))
}

// ExpectLiftingStatusHasPrefix applies the HasPrefix predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldExpectLiftingStatus, v))
}

// ExpectLiftingStatusHasSuffix applies the HasSuffix predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldExpectLiftingStatus, v))
}

// ExpectLiftingStatusEqualFold applies the EqualFold predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldExpectLiftingStatus, v))
}

// ExpectLiftingStatusContainsFold applies the ContainsFold predicate on the "expect_lifting_status" field.
func ExpectLiftingStatusContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldExpectLiftingStatus, v))
}

// ExpectLiftingDescriptionEQ applies the EQ predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldExpectLiftingDescription, v))
}

// ExpectLiftingDescriptionNEQ applies the NEQ predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldExpectLiftingDescription, v))
}

// ExpectLiftingDescriptionIn applies the In predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldExpectLiftingDescription, vs...))
}

// ExpectLiftingDescriptionNotIn applies the NotIn predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldExpectLiftingDescription, vs...))
}

// ExpectLiftingDescriptionGT applies the GT predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldExpectLiftingDescription, v))
}

// ExpectLiftingDescriptionGTE applies the GTE predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldExpectLiftingDescription, v))
}

// ExpectLiftingDescriptionLT applies the LT predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldExpectLiftingDescription, v))
}

// ExpectLiftingDescriptionLTE applies the LTE predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldExpectLiftingDescription, v))
}

// ExpectLiftingDescriptionContains applies the Contains predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldExpectLiftingDescription, v))
}

// ExpectLiftingDescriptionHasPrefix applies the HasPrefix predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldExpectLiftingDescription, v))
}

// ExpectLiftingDescriptionHasSuffix applies the HasSuffix predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldExpectLiftingDescription, v))
}

// ExpectLiftingDescriptionEqualFold applies the EqualFold predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldExpectLiftingDescription, v))
}

// ExpectLiftingDescriptionContainsFold applies the ContainsFold predicate on the "expect_lifting_description" field.
func ExpectLiftingDescriptionContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldExpectLiftingDescription, v))
}

// ReasonEQ applies the EQ predicate on the "reason" field.
func ReasonEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldReason, v))
}

// ReasonNEQ applies the NEQ predicate on the "reason" field.
func ReasonNEQ(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldReason, v))
}

// ReasonIn applies the In predicate on the "reason" field.
func ReasonIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldReason, vs...))
}

// ReasonNotIn applies the NotIn predicate on the "reason" field.
func ReasonNotIn(vs ...string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldReason, vs...))
}

// ReasonGT applies the GT predicate on the "reason" field.
func ReasonGT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldReason, v))
}

// ReasonGTE applies the GTE predicate on the "reason" field.
func ReasonGTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldReason, v))
}

// ReasonLT applies the LT predicate on the "reason" field.
func ReasonLT(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldReason, v))
}

// ReasonLTE applies the LTE predicate on the "reason" field.
func ReasonLTE(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldReason, v))
}

// ReasonContains applies the Contains predicate on the "reason" field.
func ReasonContains(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContains(FieldReason, v))
}

// ReasonHasPrefix applies the HasPrefix predicate on the "reason" field.
func ReasonHasPrefix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasPrefix(FieldReason, v))
}

// ReasonHasSuffix applies the HasSuffix predicate on the "reason" field.
func ReasonHasSuffix(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldHasSuffix(FieldReason, v))
}

// ReasonEqualFold applies the EqualFold predicate on the "reason" field.
func ReasonEqualFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEqualFold(FieldReason, v))
}

// ReasonContainsFold applies the ContainsFold predicate on the "reason" field.
func ReasonContainsFold(v string) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldContainsFold(FieldReason, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.MedSupply {
	return predicate.MedSupply(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.MedSupply) predicate.MedSupply {
	return predicate.MedSupply(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.MedSupply) predicate.MedSupply {
	return predicate.MedSupply(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.MedSupply) predicate.MedSupply {
	return predicate.MedSupply(sql.NotPredicates(p))
}
